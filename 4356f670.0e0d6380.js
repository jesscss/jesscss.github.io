(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{116:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return O}));var a=t(0),r=t.n(a);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function b(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=r.a.createContext({}),p=function(e){var n=r.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return r.a.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},m=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,c=b(e,["components","mdxType","originalType","parentName"]),u=p(t),m=a,O=u["".concat(o,".").concat(m)]||u[m]||s[m]||l;return t?r.a.createElement(O,i(i({ref:n},c),{},{components:t})):r.a.createElement(O,i({ref:n},c))}));function O(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,o=new Array(l);o[0]=m;var i={};for(var b in n)hasOwnProperty.call(n,b)&&(i[b]=n[b]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var c=2;c<l;c++)o[c]=t[c];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},84:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return i})),t.d(n,"toc",(function(){return b})),t.d(n,"default",(function(){return p}));var a=t(3),r=t(7),l=(t(0),t(116)),o={id:"color-definition",title:"Color Definition Functions",sidebar_label:"Color Definition"},i={unversionedId:"functions/color-definition",id:"functions/color-definition",isDocsHomePage:!1,title:"Color Definition Functions",description:"You can import rgb / rgba / hsl / hsla functions in order to perform operations on color definitions in that format.",source:"@site/docs/functions/color-definition.md",slug:"/functions/color-definition",permalink:"/docs/functions/color-definition",editUrl:"https://github.com/jesscss/jess/tree/master/packages/docs/docs/functions/color-definition.md",version:"current",sidebar_label:"Color Definition",sidebar:"someSidebar",previous:{title:"Introduction",permalink:"/docs/functions/about"},next:{title:"Color Channel Functions",permalink:"/docs/functions/color-channel"}},b=[{value:"rgb",id:"rgb",children:[]},{value:"rgba",id:"rgba",children:[]},{value:"hsl",id:"hsl",children:[]},{value:"hsla",id:"hsla",children:[]},{value:"hsv",id:"hsv",children:[]},{value:"hsva",id:"hsva",children:[]}],c={toc:b};function p(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(l.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(l.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(l.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(l.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(l.b)("p",{parentName:"div"},"You can import ",Object(l.b)("inlineCode",{parentName:"p"},"rgb")," / ",Object(l.b)("inlineCode",{parentName:"p"},"rgba")," / ",Object(l.b)("inlineCode",{parentName:"p"},"hsl")," / ",Object(l.b)("inlineCode",{parentName:"p"},"hsla")," functions in order to perform operations on color definitions in that format."),Object(l.b)("p",{parentName:"div"},"If you're not performing operations on a color, you don't have to import ",Object(l.b)("inlineCode",{parentName:"p"},"rgb")," / ",Object(l.b)("inlineCode",{parentName:"p"},"rgba")," / ",Object(l.b)("inlineCode",{parentName:"p"},"hsl")," / ",Object(l.b)("inlineCode",{parentName:"p"},"hsla")," for them to appear in your stylesheet."))),Object(l.b)("p",null,"Example:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-scss"}),"@import { hue, hsl } from '@jesscss/fns';\n\n.box {\n  value: hue(hsl(90, 100%, 50%));\n}\n")),Object(l.b)("h3",{id:"rgb"},"rgb"),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Creates an opaque color object from decimal red, green and blue (RGB) values.")),Object(l.b)("p",null,"Parameters:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"red"),": An integer 0-255 or percentage 0-100%."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"green"),": An integer 0-255 or percentage 0-100%."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"blue"),": An integer 0-255 or percentage 0-100%.")),Object(l.b)("p",null,"Returns: ",Object(l.b)("inlineCode",{parentName:"p"},"color")),Object(l.b)("p",null,"Example: ",Object(l.b)("inlineCode",{parentName:"p"},"rgb(90, 129, 32)")),Object(l.b)("p",null,"Output: ",Object(l.b)("inlineCode",{parentName:"p"},"rgb(90, 129, 32)")),Object(l.b)("h3",{id:"rgba"},"rgba"),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Creates a transparent color object from decimal red, green, blue and alpha (RGBA) values.")),Object(l.b)("p",null,"Parameters:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"red"),": An integer 0-255 or percentage 0-100%."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"green"),": An integer 0-255 or percentage 0-100%."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"blue"),": An integer 0-255 or percentage 0-100%."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"alpha"),": A number 0-1 or percentage 0-100%.")),Object(l.b)("p",null,"Returns: ",Object(l.b)("inlineCode",{parentName:"p"},"color")),Object(l.b)("p",null,"Example: ",Object(l.b)("inlineCode",{parentName:"p"},"rgba(90, 129, 32, 0.5)")),Object(l.b)("p",null,"Output: ",Object(l.b)("inlineCode",{parentName:"p"},"rgba(90, 129, 32, 0.5)")),Object(l.b)("h3",{id:"hsl"},"hsl"),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Creates an opaque color object from hue, saturation and lightness (HSL) values.")),Object(l.b)("p",null,"Parameters:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"hue"),": An integer 0-360 representing degrees."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"saturation"),": A percentage 0-100% or number 0-1."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"lightness"),": A percentage 0-100% or number 0-1.")),Object(l.b)("p",null,"Returns: ",Object(l.b)("inlineCode",{parentName:"p"},"color")),Object(l.b)("p",null,"Example: ",Object(l.b)("inlineCode",{parentName:"p"},"hsl(90, 100%, 50%)")),Object(l.b)("p",null,"Output: ",Object(l.b)("inlineCode",{parentName:"p"},"#80ff00")),Object(l.b)("p",null,"This is useful if you want to create a new color based on another color's channel, for example:\n",Object(l.b)("inlineCode",{parentName:"p"},"@let newColor: hsl(hue($oldColor), 45%, 90%);")),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"newColor")," will have ",Object(l.b)("inlineCode",{parentName:"p"},"oldColor"),"'s ",Object(l.b)("em",{parentName:"p"},"hue"),", and its own saturation and lightness."),Object(l.b)("h3",{id:"hsla"},"hsla"),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Creates a transparent color object from hue, saturation, lightness and alpha (HSLA) values.")),Object(l.b)("p",null,"Parameters:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"hue"),": An integer 0-360 representing degrees."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"saturation"),": A percentage 0-100% or number 0-1."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"lightness"),": A percentage 0-100% or number 0-1."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"alpha"),": A percentage 0-100% or number 0-1.")),Object(l.b)("p",null,"Returns: ",Object(l.b)("inlineCode",{parentName:"p"},"color")),Object(l.b)("p",null,"Example: ",Object(l.b)("inlineCode",{parentName:"p"},"hsla(90, 100%, 50%, 0.5)")),Object(l.b)("p",null,"Output: ",Object(l.b)("inlineCode",{parentName:"p"},"rgba(128, 255, 0, 0.5)")),Object(l.b)("h3",{id:"hsv"},"hsv"),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Creates an opaque color object from hue, saturation and value (HSV) values.")),Object(l.b)("p",null,"Note that this is a color space available in Photoshop, and is not the same as ",Object(l.b)("inlineCode",{parentName:"p"},"hsl"),"."),Object(l.b)("p",null,"Parameters:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"hue"),": An integer 0-360 representing degrees."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"saturation"),": A percentage 0-100% or number 0-1."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"value"),": A percentage 0-100% or number 0-1.")),Object(l.b)("p",null,"Returns: ",Object(l.b)("inlineCode",{parentName:"p"},"color")),Object(l.b)("p",null,"Example: ",Object(l.b)("inlineCode",{parentName:"p"},"hsv(90, 100%, 50%)")),Object(l.b)("p",null,"Output: ",Object(l.b)("inlineCode",{parentName:"p"},"#408000")),Object(l.b)("h3",{id:"hsva"},"hsva"),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Creates a transparent color object from hue, saturation, value and alpha (HSVA) values.")),Object(l.b)("p",null,"Note that this is not the same as ",Object(l.b)("inlineCode",{parentName:"p"},"hsla"),", and is a color space available in Photoshop."),Object(l.b)("p",null,"Parameters:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"hue"),": An integer 0-360 representing degrees."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"saturation"),": A percentage 0-100% or number 0-1."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"value"),": A percentage 0-100% or number 0-1."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"alpha"),": A percentage 0-100% or number 0-1.")),Object(l.b)("p",null,"Returns: ",Object(l.b)("inlineCode",{parentName:"p"},"color")),Object(l.b)("p",null,"Example: ",Object(l.b)("inlineCode",{parentName:"p"},"hsva(90, 100%, 50%, 0.5)")),Object(l.b)("p",null,"Output: ",Object(l.b)("inlineCode",{parentName:"p"},"rgba(64, 128, 0, 0.5)")))}p.isMDXComponent=!0}}]);